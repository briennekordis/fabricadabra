{"ast":null,"code":"var _jsxFileName = \"/Users/BrienneKordis/Code/Projects/Fabric/fabricadabra/client/src/components/viewStash.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport React, { useState, useEffect } from \"react\";\nimport FabricDataService from \"../services/fabricServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewStash() {\n  _s();\n\n  let details = {};\n  const [stash, setStash] = useState([]);\n  const [fabric, setFabric] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const widthFormat = new Intl.NumberFormat({\n    maximumFractionDigits: 0\n  });\n  useEffect(() => {\n    const getStash = async () => {\n      try {\n        const response = await FabricDataService.getAll();\n        setStash(response.data);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setStash(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getStash();\n  }, []);\n\n  const showDetails = async id => {\n    try {\n      const response = await FabricDataService.get(id);\n      details = await response.data[0];\n      setError(null);\n      console.log(details);\n    } catch (err) {\n      setError(err.message);\n      setFabric(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  function Fabric(_ref) {\n    let {\n      fabric: {\n        FabricId,\n        FabricType,\n        Color,\n        PatternDesc,\n        Yardage,\n        Width,\n        SourceName,\n        ProjectName,\n        ScrapStatus\n      }\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      onClick: function () {\n        showDetails(FabricId);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: FabricType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: Color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: PatternDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-end\",\n        children: Yardage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-end\",\n        children: [widthFormat.format(Width), \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          readOnly: true,\n          checked: ScrapStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, FabricId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Fabric Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Pattern\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Yardage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Width\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Scrap Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: stash.map(fabric => /*#__PURE__*/_jsxDEV(Fabric, {\n            fabric: fabric\n          }, Fabric.FabricId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ViewStash, \"e8S9FUBm5m1DqibnM9tai7jCgGM=\");\n\n_c = ViewStash;\nexport default ViewStash;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewStash\");","map":{"version":3,"sources":["/Users/BrienneKordis/Code/Projects/Fabric/fabricadabra/client/src/components/viewStash.js"],"names":["React","useState","useEffect","FabricDataService","ViewStash","details","stash","setStash","fabric","setFabric","loading","setLoading","error","setError","show","setShow","handleClose","widthFormat","Intl","NumberFormat","maximumFractionDigits","getStash","response","getAll","data","err","message","showDetails","id","get","console","log","Fabric","FabricId","FabricType","Color","PatternDesc","Yardage","Width","SourceName","ProjectName","ScrapStatus","format","map"],"mappings":"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","sourcesContent":["import '../App.css';\nimport React, { useState, useEffect } from \"react\";\nimport FabricDataService from \"../services/fabricServices\";\n\nfunction ViewStash() {\n    let details = {};\n    const [stash, setStash] = useState([]);\n    const [fabric, setFabric] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const widthFormat = new Intl.NumberFormat({maximumFractionDigits: 0});\n\n    useEffect(() => {\n      const getStash = async () => {\n        try {\n          const response = await FabricDataService.getAll();\n          setStash(response.data);\n          setError(null);\n        } catch (err) {\n          setError(err.message);\n          setStash(null);\n        } finally {\n          setLoading(false);\n        }\n      };\n      getStash();\n    }, []);\n\n        const showDetails = async (id) => {\n          try {\n            const response = await FabricDataService.get(id);\n            details = await response.data[0];\n            setError(null);\n            console.log(details);\n          } catch (err) {\n            setError(err.message);\n            setFabric(null);\n          } finally {\n            setLoading(false);\n          }\n    } \n\n    function Fabric({fabric: {FabricId, FabricType, Color, PatternDesc, \n      Yardage, Width, SourceName, ProjectName, ScrapStatus} }) {\n        return (\n          <tr key={FabricId} onClick={function(){showDetails(FabricId)}}>\n            <td>{FabricType}</td>\n            <td>{Color}</td>\n            <td>{PatternDesc}</td>\n            <td className=\"text-end\">{Yardage}</td>\n            <td className=\"text-end\">{widthFormat.format(Width)}\"</td>\n            {/* <td>{SourceName}</td>\n            <td>{ProjectName}</td> */}\n            <td className=\"text-center\"><input type=\"checkbox\" readOnly checked={ScrapStatus}></input></td>\n          </tr>\n        );\n      }\n\n    return (\n      <>\n        <div>\n            <table className=\"table table-bordered table-striped\">\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">Fabric Type</th>\n                        <th scope=\"col\">Color</th>\n                        <th scope=\"col\">Pattern</th>\n                        <th scope=\"col\">Yardage</th>\n                        <th scope=\"col\">Width</th>\n                        {/* <th scope=\"col\">Source</th>\n                        <th scope=\"col\">Intended Project</th> */}\n                        <th scope=\"col\">Scrap Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {stash.map(fabric => <Fabric key={Fabric.FabricId} fabric={fabric} />)}\n                  </tbody>\n            </table>\n        </div>\n        <div>\n\n        </div>\n      </> \n    );\n  }\n\n\nexport default ViewStash;\n"]},"metadata":{},"sourceType":"module"}