{"ast":null,"code":"var _jsxFileName = \"/Users/BrienneKordis/Code/Projects/Fabric/fabricadabra/client/src/components/viewStash.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport FabricList from './fabricList';\nimport React, { useState, useEffect } from \"react\";\nimport FabricDataService from \"../services/fabricServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewStash() {\n  _s();\n\n  const [stash, setStash] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getStash = async () => {\n      try {\n        const response = await FabricDataService.getAll();\n        console.log(response);\n        setStash(response.data);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n        setStash(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getStash();\n  }, []);\n  console.log(stash);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Fabric Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Pattern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Yardage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Intended Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Scrap Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: stash.map(fabric => /*#__PURE__*/_jsxDEV(FabricList, {\n          fabric: fabric\n        }, FabricList.FabricId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ViewStash, \"xF4uVElRAi6CLm/enjcOpai/43c=\");\n\n_c = ViewStash;\nexport default ViewStash;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewStash\");","map":{"version":3,"sources":["/Users/BrienneKordis/Code/Projects/Fabric/fabricadabra/client/src/components/viewStash.js"],"names":["FabricList","React","useState","useEffect","FabricDataService","ViewStash","stash","setStash","loading","setLoading","error","setError","getStash","response","getAll","console","log","data","err","message","map","fabric","FabricId"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMT,iBAAiB,CAACU,MAAlB,EAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAN,QAAAA,QAAQ,CAACM,QAAQ,CAACI,IAAV,CAAR;AACAN,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OALD,CAKE,OAAOO,GAAP,EAAY;AACZP,QAAAA,QAAQ,CAACO,GAAG,CAACC,OAAL,CAAR;AACAZ,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OARD,SAQU;AACRE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAZD;;AAaAG,IAAAA,QAAQ;AACT,GAfQ,EAeN,EAfM,CAAT;AAgBAG,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAEA,sBACE;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,oCAAjB;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAaM;AAAA,kBACGA,KAAK,CAACc,GAAN,CAAUC,MAAM,iBAAI,QAAC,UAAD;AAAsC,UAAA,MAAM,EAAEA;AAA9C,WAAiBrB,UAAU,CAACsB,QAA5B;AAAA;AAAA;AAAA;AAAA,gBAApB;AADH;AAAA;AAAA;AAAA;AAAA,cAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA5CMjB,S;;KAAAA,S;AA+CT,eAAeA,SAAf","sourcesContent":["import '../App.css';\nimport FabricList from './fabricList';\nimport React, { useState, useEffect } from \"react\";\nimport FabricDataService from \"../services/fabricServices\";\n\nfunction ViewStash() {\n    const [stash, setStash] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n      const getStash = async () => {\n        try {\n          const response = await FabricDataService.getAll();\n          console.log(response);\n          setStash(response.data);\n          setError(null);\n        } catch (err) {\n          setError(err.message);\n          setStash(null);\n        } finally {\n          setLoading(false);\n        }\n      };\n      getStash();\n    }, []);\n    console.log(stash);\n\n    return (\n      <div>\n          <table className=\"table table-bordered table-striped\">\n              <thead className=\"thead-dark\">\n                  <tr>\n                      <th scope=\"col\">Fabric Type</th>\n                      <th scope=\"col\">Color</th>\n                      <th scope=\"col\">Pattern</th>\n                      <th scope=\"col\">Yardage</th>\n                      <th scope=\"col\">Width</th>\n                      <th scope=\"col\">Source</th>\n                      <th scope=\"col\">Intended Project</th>\n                      <th scope=\"col\">Scrap Status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stash.map(fabric => <FabricList key={FabricList.FabricId} fabric={fabric} />)}\n                </tbody>\n          </table>\n      </div>\n    );\n  }\n\n\nexport default ViewStash;\n"]},"metadata":{},"sourceType":"module"}