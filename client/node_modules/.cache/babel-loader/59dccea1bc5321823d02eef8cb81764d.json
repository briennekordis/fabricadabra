{"ast":null,"code":"var _jsxFileName = \"/Users/BrienneKordis/Code/Projects/Fabric/fabricadabra/client/src/components/fabricList.js\",\n    _s2 = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport FabricDataService from \"../services/fabricServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FabricList(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    fabric: {\n      FabricId,\n      FabricType,\n      Color,\n      PatternDesc,\n      Yardage,\n      Width,\n      SourceName,\n      ProjectName,\n      ScrapStatus\n    }\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [fabric, setFabric] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const handleClose = () => setShow(false);\n\n  const widthFormat = new Intl.NumberFormat({\n    maximumFractionDigits: 0\n  });\n\n  const ShowModal = fabricId => {\n    _s();\n\n    useEffect(() => {\n      const getStash = async () => {\n        try {\n          const response = await FabricDataService.get(fabricId);\n          setFabric(response.data);\n          setError(null);\n        } catch (err) {\n          setError(err.message);\n          setFabric(null);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      getStash();\n    }, []);\n    console.log(fabric);\n  };\n\n  _s(ShowModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onclick: ShowModal(FabricId),\n        children: FabricType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: Color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: PatternDesc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-end\",\n      children: Yardage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-end\",\n      children: [widthFormat.format(Width), \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: ScrapStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, FabricId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(FabricList, \"gkfu2RqTkFN2vAImRBZ3Zd6xo2A=\");\n\n_c = FabricList;\nexport default FabricList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FabricList\");","map":{"version":3,"sources":["/Users/BrienneKordis/Code/Projects/Fabric/fabricadabra/client/src/components/fabricList.js"],"names":["React","useEffect","useState","FabricDataService","FabricList","fabric","FabricId","FabricType","Color","PatternDesc","Yardage","Width","SourceName","ProjectName","ScrapStatus","show","setShow","setFabric","loading","setLoading","error","setError","handleClose","widthFormat","Intl","NumberFormat","maximumFractionDigits","ShowModal","fabricId","getStash","response","get","data","err","message","console","log","format"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;;AAEA,SAASC,UAAT,OAC6D;AAAA;;AAAA;;AAAA,MADzC;AAACC,IAAAA,MAAM,EAAE;AAACC,MAAAA,QAAD;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA,KAAvB;AAA8BC,MAAAA,WAA9B;AACzBC,MAAAA,OADyB;AAChBC,MAAAA,KADgB;AACTC,MAAAA,UADS;AACGC,MAAAA,WADH;AACgBC,MAAAA;AADhB;AAAT,GACyC;AACrD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACG,MAAD,EAASY,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAMoB,WAAW,GAAG,MAAMN,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMO,WAAW,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB;AAACC,IAAAA,qBAAqB,EAAE;AAAxB,GAAtB,CAApB;;AAEA,QAAMC,SAAS,GAAIC,QAAD,IAAc;AAAA;;AAC5B3B,IAAAA,SAAS,CAAC,MAAM;AACZ,YAAM4B,QAAQ,GAAG,YAAY;AAC3B,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAM3B,iBAAiB,CAAC4B,GAAlB,CAAsBH,QAAtB,CAAvB;AACAX,UAAAA,SAAS,CAACa,QAAQ,CAACE,IAAV,CAAT;AACAX,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,SAJD,CAIE,OAAOY,GAAP,EAAY;AACZZ,UAAAA,QAAQ,CAACY,GAAG,CAACC,OAAL,CAAR;AACAjB,UAAAA,SAAS,CAAC,IAAD,CAAT;AACD,SAPD,SAOU;AACRE,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,OAXD;;AAYAU,MAAAA,QAAQ;AACT,KAdM,EAcJ,EAdI,CAAT;AAeEM,IAAAA,OAAO,CAACC,GAAR,CAAY/B,MAAZ;AACL,GAjBD;;AARqD,KAQ/CsB,SAR+C;;AA2BzD,sBACA;AAAA,4BACI;AAAA,6BAAI;AAAG,QAAA,OAAO,EAAEA,SAAS,CAACrB,QAAD,CAArB;AAAA,kBAAkCC;AAAlC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,iBAA0Ba,WAAW,CAACc,MAAZ,CAAmB1B,KAAnB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,6BAA4B;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEG;AAAhC;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,KAASR,QAAT;AAAA;AAAA;AAAA;AAAA,UADA;AAYH;;IAxCQF,U;;KAAAA,U;AA0CT,eAAeA,UAAf","sourcesContent":["import { React, useEffect, useState} from \"react\";\nimport FabricDataService from \"../services/fabricServices\";\n\nfunction FabricList({fabric: {FabricId, FabricType, Color, PatternDesc, \n    Yardage, Width, SourceName, ProjectName, ScrapStatus} }) {\n        const [show, setShow] = useState(false);\n        const [fabric, setFabric] = useState({});\n        const [loading, setLoading] = useState(true);\n        const [error, setError] = useState(null);    \n        const handleClose = () => setShow(false);\n        const widthFormat = new Intl.NumberFormat({maximumFractionDigits: 0});\n\n        const ShowModal = (fabricId) => {\n            useEffect(() => {\n                const getStash = async () => {\n                  try {\n                    const response = await FabricDataService.get(fabricId);\n                    setFabric(response.data);\n                    setError(null);\n                  } catch (err) {\n                    setError(err.message);\n                    setFabric(null);\n                  } finally {\n                    setLoading(false);\n                  }\n                };\n                getStash();\n              }, []);\n              console.log(fabric);\n        }\n\n    return (\n    <tr key={FabricId}>\n        <td><a onclick={ShowModal(FabricId)}>{FabricType}</a></td>\n        <td>{Color}</td>\n        <td>{PatternDesc}</td>\n        <td className=\"text-end\">{Yardage}</td>\n        <td className=\"text-end\">{widthFormat.format(Width)}\"</td>\n        {/* <td>{SourceName}</td>\n        <td>{ProjectName}</td> */}\n        <td className=\"text-center\"><input type=\"checkbox\" checked={ScrapStatus}></input></td>\n    </tr>\n    );\n}\n\nexport default FabricList;"]},"metadata":{},"sourceType":"module"}